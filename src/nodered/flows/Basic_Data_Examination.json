[
    {
        "id": "mtconnect-flow",
        "type": "tab",
        "label": "MTConnect Printer Monitor",
        "disabled": false,
        "info": ""
    },
    {
        "id": "http-request",
        "type": "http request",
        "z": "mtconnect-flow",
        "name": "MTConnect Data",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://octoprint:5000/plugin/mtconnect/current",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 290,
        "y": 120,
        "wires": [["data-processor"]]
    },
    {
        "id": "inject-timer",
        "type": "inject",
        "z": "mtconnect-flow",
        "name": "5s Timer",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "x": 110,
        "y": 120,
        "wires": [["http-request"]]
    },
    {
        "id": "data-processor",
        "type": "function",
        "z": "mtconnect-flow",
        "name": "Process MTConnect Data",
        "func": "let streams = msg.payload.MTConnectStreams.Streams[0].DeviceStream;\n\n// Initialize variables\nlet nozzleTemp = null;\nlet bedTemp = null;\nlet status = null;\nlet dataTable = [];\n\n// Extract nozzle temperature\nlet head = streams.ComponentStreams.ComponentStream.find(c => c.component === 'Head');\nif (head && head.Samples && head.Samples.Sample) {\n    nozzleTemp = head.Samples.Sample.find(s => s.name === 'nozzle_temperature');\n}\n\n// Extract bed temperature\nlet bed = streams.ComponentStreams.ComponentStream.find(c => c.component === 'Table');\nif (bed && bed.Samples && bed.Samples.Sample) {\n    bedTemp = bed.Samples.Sample.find(s => s.name === 'bed_temperature');\n}\n\n// Extract system status\nif (streams.Events && streams.Events.Event) {\n    status = streams.Events.Event.find(e => e.name === 'system_status');\n}\n\n// Prepare data for table display\nif (streams.Events && streams.Events.Event) {\n    streams.Events.Event.forEach(event => {\n        dataTable.push({ parameter: event.name, value: event.value });\n    });\n}\n\n// Create output messages\nreturn [\n    { payload: nozzleTemp ? parseFloat(nozzleTemp.value) : 0 },  // Nozzle gauge\n    { payload: bedTemp ? parseFloat(bedTemp.value) : 0 },        // Bed gauge\n    { payload: status ? status.value : 'UNKNOWN' },              // Status text\n    { payload: dataTable }                                       // Data table\n];",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 120,
        "wires": [["nozzle-gauge"],["bed-gauge"],["status-text"],["data-table"]]
    },
    {
        "id": "nozzle-gauge",
        "type": "ui_gauge",
        "z": "mtconnect-flow",
        "name": "Nozzle Temperature",
        "group": "g-printer-status",
        "order": 1,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "Nozzle Temp",
        "label": "?C",
        "format": "{{value}}",
        "min": 0,
        "max": "300",
        "colors": ["#00b500","#e6e600","#ca3838"],
        "seg1": "180",
        "seg2": "220",
        "x": 720,
        "y": 80,
        "wires": []
    },
    {
        "id": "bed-gauge",
        "type": "ui_gauge",
        "z": "mtconnect-flow",
        "name": "Bed Temperature",
        "group": "g-printer-status",
        "order": 2,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "Bed Temp",
        "label": "?C",
        "format": "{{value}}",
        "min": 0,
        "max": "120",
        "colors": ["#00b500","#e6e600","#ca3838"],
        "seg1": "50",
        "seg2": "80",
        "x": 720,
        "y": 120,
        "wires": []
    },
    {
        "id": "status-text",
        "type": "ui_text",
        "z": "mtconnect-flow",
        "group": "g-printer-status",
        "order": 3,
        "width": 4,
        "height": 1,
        "name": "Printer Status",
        "label": "Status:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 720,
        "y": 160,
        "wires": []
    },
    {
        "id": "data-table",
        "type": "ui_table",
        "z": "mtconnect-flow",
        "group": "g-printer-status",
        "name": "Data Table",
        "order": 4,
        "width": 8,
        "height": 4,
        "columns": [
            {"field": "parameter", "title": "Parameter", "width": "", "align": "left", "formatter": "plaintext"},
            {"field": "value", "title": "Value", "width": "", "align": "left", "formatter": "plaintext"}
        ],
        "outputs": 0,
        "cts": false,
        "x": 720,
        "y": 200,
        "wires": []
    },
    {
        "id": "g-printer-status",
        "type": "ui_group",
        "name": "Printer Status",
        "tab": "dashboard",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "dashboard",
        "type": "ui_tab",
        "name": "MTConnect Monitor",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]
